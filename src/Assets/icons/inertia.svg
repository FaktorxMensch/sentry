var _path;
var _excluded = ["title", "titleId"];
function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }
function _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }
function _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }
import * as React from "react";
function SvgInertia(_ref, svgRef) {
  var title = _ref.title,
    titleId = _ref.titleId,
    props = _objectWithoutProperties(_ref, _excluded);
  return /*#__PURE__*/React.createElement("svg", _extends({
    width: 24,
    height: 24,
    viewBox: "0 0 24 24",
    fill: "none",
    xmlns: "http://www.w3.org/2000/svg",
    ref: svgRef,
    "aria-labelledby": titleId
  }, props), title ? /*#__PURE__*/React.createElement("title", {
    id: titleId
  }, title) : null, _path || (_path = /*#__PURE__*/React.createElement("path", {
    fillRule: "evenodd",
    clipRule: "evenodd",
    d: "M12.0001 4.89961C12.0645 4.89961 12.2336 4.9312 12.4944 5.22535C12.7543 5.51847 13.0294 5.99395 13.2787 6.65877C13.4448 7.10177 13.5918 7.60814 13.7138 8.16573C13.1582 8.12222 12.5849 8.09961 12.0001 8.09961C11.4153 8.09961 10.842 8.12222 10.2864 8.16573C10.4084 7.60814 10.5553 7.10177 10.7215 6.65877C10.9708 5.99395 11.2459 5.51847 11.5058 5.22535C11.7666 4.9312 11.9357 4.89961 12.0001 4.89961ZM8.4044 8.40391C8.56118 7.52661 8.77473 6.72369 9.03608 6.02674C9.32967 5.24384 9.70097 4.54776 10.1589 4.03122C10.616 3.51574 11.2361 3.09961 12.0001 3.09961C12.7641 3.09961 13.3842 3.51574 13.8413 4.03122C14.2992 4.54776 14.6705 5.24384 14.9641 6.02674C15.2255 6.72369 15.439 7.52661 15.5958 8.40391C16.4731 8.56069 17.276 8.77424 17.973 9.03559C18.7559 9.32918 19.452 9.70048 19.9685 10.1584C20.484 10.6155 20.9001 11.2356 20.9001 11.9996C20.9001 12.7636 20.484 13.3837 19.9685 13.8408C19.452 14.2987 18.7559 14.67 17.973 14.9636C17.276 15.225 16.4731 15.4385 15.5958 15.5953C15.439 16.4726 15.2255 17.2755 14.9641 17.9725C14.6705 18.7554 14.2992 19.4515 13.8413 19.968C13.3842 20.4835 12.7641 20.8996 12.0001 20.8996C11.2361 20.8996 10.616 20.4835 10.1589 19.968C9.70097 19.4515 9.32967 18.7554 9.03608 17.9725C8.77473 17.2755 8.56118 16.4726 8.4044 15.5953C7.5271 15.4385 6.72418 15.225 6.02723 14.9636C5.24433 14.67 4.54824 14.2987 4.03171 13.8408C3.51623 13.3837 3.1001 12.7636 3.1001 11.9996C3.1001 11.2356 3.51623 10.6155 4.03171 10.1584C4.54824 9.70048 5.24433 9.32918 6.02723 9.03559C6.72418 8.77424 7.5271 8.56069 8.4044 8.40391ZM8.16622 13.7133C7.60863 13.5913 7.10226 13.4444 6.65925 13.2782C5.99444 13.0289 5.51895 12.7538 5.22584 12.4939C4.93168 12.2331 4.9001 12.064 4.9001 11.9996C4.9001 11.9352 4.93168 11.7661 5.22584 11.5053C5.51895 11.2454 5.99444 10.9703 6.65925 10.721C7.10226 10.5549 7.60863 10.4079 8.16622 10.2859C8.12271 10.8416 8.1001 11.4148 8.1001 11.9996C8.1001 12.5844 8.12271 13.1577 8.16622 13.7133ZM9.99909 14.0006C9.9349 13.367 9.9001 12.6962 9.9001 11.9996C9.9001 11.303 9.9349 10.6322 9.99909 9.9986C10.6327 9.93441 11.3035 9.89961 12.0001 9.89961C12.6967 9.89961 13.3675 9.93441 14.0011 9.99861C14.0653 10.6322 14.1001 11.303 14.1001 11.9996C14.1001 12.6962 14.0653 13.367 14.0011 14.0006C13.3675 14.0648 12.6967 14.0996 12.0001 14.0996C11.3035 14.0996 10.6327 14.0648 9.99909 14.0006ZM10.2864 15.8335C10.4084 16.3911 10.5553 16.8974 10.7215 17.3405C10.9708 18.0053 11.2459 18.4808 11.5058 18.7739C11.7666 19.068 11.9357 19.0996 12.0001 19.0996C12.0645 19.0996 12.2336 19.068 12.4944 18.7739C12.7543 18.4808 13.0294 18.0053 13.2787 17.3405C13.4448 16.8974 13.5918 16.3911 13.7138 15.8335C13.1582 15.877 12.5849 15.8996 12.0001 15.8996C11.4153 15.8996 10.842 15.877 10.2864 15.8335ZM15.834 13.7133C16.3916 13.5913 16.8979 13.4444 17.3409 13.2782C18.0058 13.0289 18.4812 12.7538 18.7744 12.4939C19.0685 12.2331 19.1001 12.064 19.1001 11.9996C19.1001 11.9352 19.0685 11.7661 18.7744 11.5053C18.4812 11.2454 18.0058 10.9703 17.3409 10.721C16.8979 10.5549 16.3916 10.4079 15.834 10.2859C15.8775 10.8416 15.9001 11.4148 15.9001 11.9996C15.9001 12.5844 15.8775 13.1577 15.834 13.7133Z",
    fill: "white"
  })));
}
var ForwardRef = /*#__PURE__*/React.forwardRef(SvgInertia);
export default __webpack_public_path__ + "static/media/inertia.31e388d97d22503fd508db3d2d2ff716.svg";
export { ForwardRef as ReactComponent };